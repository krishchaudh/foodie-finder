{"ast":null,"code":"var _jsxFileName = \"/Users/krishchaudhary/Documents/foodie-finder/frontend/src/pages/RestaurantDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getRestaurant, getReviewsByRestaurant, createReview } from '../services/api.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RestaurantDetail() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [restaurant, setRestaurant] = useState(null);\n  const [reviews, setReviews] = useState([]);\n  const [rating, setRating] = useState(5);\n  const [comment, setComment] = useState('');\n  const token = localStorage.getItem('token');\n  useEffect(() => {\n    (async () => {\n      const restData = await getRestaurant(id);\n      setRestaurant(restData);\n      const revData = await getReviewsByRestaurant(id);\n      setReviews(revData);\n    })();\n  }, [id]);\n  const handleReviewSubmit = async e => {\n    e.preventDefault();\n    if (!token) return;\n    try {\n      await createReview(token, {\n        restaurant_id: id,\n        rating,\n        comment\n      });\n      // Refresh reviews\n      const revData = await getReviewsByRestaurant(id);\n      setReviews(revData);\n      setRating(5);\n      setComment('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  if (!restaurant) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: restaurant.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [restaurant.address, \", \", restaurant.city]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Cuisine: \", restaurant.cuisine]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Average Rating: \", restaurant.rating]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Reviews\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), reviews.map(rev => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [rev.username, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), \" \", rev.comment, \" (Rating: \", rev.rating, \")\"]\n    }, rev.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)), token && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleReviewSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Rating (1-5): \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: rating,\n        min: \"1\",\n        max: \"5\",\n        onChange: e => setRating(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Comment: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: comment,\n        onChange: e => setComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(RestaurantDetail, \"t72XQUMOOzFyG8T+aTTvHSEj62Q=\", false, function () {\n  return [useParams];\n});\n_c = RestaurantDetail;\nexport default RestaurantDetail;\nvar _c;\n$RefreshReg$(_c, \"RestaurantDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","getRestaurant","getReviewsByRestaurant","createReview","jsxDEV","_jsxDEV","RestaurantDetail","_s","id","restaurant","setRestaurant","reviews","setReviews","rating","setRating","comment","setComment","token","localStorage","getItem","restData","revData","handleReviewSubmit","e","preventDefault","restaurant_id","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","name","address","city","cuisine","map","rev","username","onSubmit","type","value","min","max","onChange","target","_c","$RefreshReg$"],"sources":["/Users/krishchaudhary/Documents/foodie-finder/frontend/src/pages/RestaurantDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getRestaurant, getReviewsByRestaurant, createReview } from '../services/api.js';\n\nfunction RestaurantDetail() {\n  const { id } = useParams();\n  const [restaurant, setRestaurant] = useState(null);\n  const [reviews, setReviews] = useState([]);\n  const [rating, setRating] = useState(5);\n  const [comment, setComment] = useState('');\n\n  const token = localStorage.getItem('token');\n\n  useEffect(() => {\n    (async () => {\n      const restData = await getRestaurant(id);\n      setRestaurant(restData);\n      const revData = await getReviewsByRestaurant(id);\n      setReviews(revData);\n    })();\n  }, [id]);\n\n  const handleReviewSubmit = async (e) => {\n    e.preventDefault();\n    if (!token) return;\n    try {\n      await createReview(token, {\n        restaurant_id: id,\n        rating,\n        comment,\n      });\n      // Refresh reviews\n      const revData = await getReviewsByRestaurant(id);\n      setReviews(revData);\n      setRating(5);\n      setComment('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  if (!restaurant) return <p>Loading...</p>;\n\n  return (\n    <div>\n      <h2>{restaurant.name}</h2>\n      <p>\n        {restaurant.address}, {restaurant.city}\n      </p>\n      <p>Cuisine: {restaurant.cuisine}</p>\n      <p>Average Rating: {restaurant.rating}</p>\n      <hr />\n      <h3>Reviews</h3>\n      {reviews.map((rev) => (\n        <div key={rev.id}>\n          <strong>{rev.username}:</strong> {rev.comment} (Rating: {rev.rating})\n        </div>\n      ))}\n      {token && (\n        <form onSubmit={handleReviewSubmit}>\n          <label>Rating (1-5): </label>\n          <input\n            type=\"number\"\n            value={rating}\n            min=\"1\"\n            max=\"5\"\n            onChange={(e) => setRating(e.target.value)}\n          />\n          <br />\n          <label>Comment: </label>\n          <textarea\n            value={comment}\n            onChange={(e) => setComment(e.target.value)}\n          />\n          <br />\n          <button type=\"submit\">Submit Review</button>\n        </form>\n      )}\n    </div>\n  );\n}\n\nexport default RestaurantDetail;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,aAAa,EAAEC,sBAAsB,EAAEC,YAAY,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzF,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAG,CAAC,GAAGR,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMmB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3CpB,SAAS,CAAC,MAAM;IACd,CAAC,YAAY;MACX,MAAMqB,QAAQ,GAAG,MAAMnB,aAAa,CAACO,EAAE,CAAC;MACxCE,aAAa,CAACU,QAAQ,CAAC;MACvB,MAAMC,OAAO,GAAG,MAAMnB,sBAAsB,CAACM,EAAE,CAAC;MAChDI,UAAU,CAACS,OAAO,CAAC;IACrB,CAAC,EAAE,CAAC;EACN,CAAC,EAAE,CAACb,EAAE,CAAC,CAAC;EAER,MAAMc,kBAAkB,GAAG,MAAOC,CAAC,IAAK;IACtCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACP,KAAK,EAAE;IACZ,IAAI;MACF,MAAMd,YAAY,CAACc,KAAK,EAAE;QACxBQ,aAAa,EAAEjB,EAAE;QACjBK,MAAM;QACNE;MACF,CAAC,CAAC;MACF;MACA,MAAMM,OAAO,GAAG,MAAMnB,sBAAsB,CAACM,EAAE,CAAC;MAChDI,UAAU,CAACS,OAAO,CAAC;MACnBP,SAAS,CAAC,CAAC,CAAC;MACZE,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC,OAAOU,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACpB;EACF,CAAC;EAED,IAAI,CAACjB,UAAU,EAAE,oBAAOJ,OAAA;IAAAwB,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAEzC,oBACE5B,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAAwB,QAAA,EAAKpB,UAAU,CAACyB;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1B5B,OAAA;MAAAwB,QAAA,GACGpB,UAAU,CAAC0B,OAAO,EAAC,IAAE,EAAC1B,UAAU,CAAC2B,IAAI;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eACJ5B,OAAA;MAAAwB,QAAA,GAAG,WAAS,EAACpB,UAAU,CAAC4B,OAAO;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpC5B,OAAA;MAAAwB,QAAA,GAAG,kBAAgB,EAACpB,UAAU,CAACI,MAAM;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1C5B,OAAA;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACN5B,OAAA;MAAAwB,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACftB,OAAO,CAAC2B,GAAG,CAAEC,GAAG,iBACflC,OAAA;MAAAwB,QAAA,gBACExB,OAAA;QAAAwB,QAAA,GAASU,GAAG,CAACC,QAAQ,EAAC,GAAC;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACM,GAAG,CAACxB,OAAO,EAAC,YAAU,EAACwB,GAAG,CAAC1B,MAAM,EAAC,GACtE;IAAA,GAFU0B,GAAG,CAAC/B,EAAE;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEX,CACN,CAAC,EACDhB,KAAK,iBACJZ,OAAA;MAAMoC,QAAQ,EAAEnB,kBAAmB;MAAAO,QAAA,gBACjCxB,OAAA;QAAAwB,QAAA,EAAO;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC7B5B,OAAA;QACEqC,IAAI,EAAC,QAAQ;QACbC,KAAK,EAAE9B,MAAO;QACd+B,GAAG,EAAC,GAAG;QACPC,GAAG,EAAC,GAAG;QACPC,QAAQ,EAAGvB,CAAC,IAAKT,SAAS,CAACS,CAAC,CAACwB,MAAM,CAACJ,KAAK;MAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC,eACF5B,OAAA;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACN5B,OAAA;QAAAwB,QAAA,EAAO;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxB5B,OAAA;QACEsC,KAAK,EAAE5B,OAAQ;QACf+B,QAAQ,EAAGvB,CAAC,IAAKP,UAAU,CAACO,CAAC,CAACwB,MAAM,CAACJ,KAAK;MAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eACF5B,OAAA;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACN5B,OAAA;QAAQqC,IAAI,EAAC,QAAQ;QAAAb,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC1B,EAAA,CA5EQD,gBAAgB;EAAA,QACRN,SAAS;AAAA;AAAAgD,EAAA,GADjB1C,gBAAgB;AA8EzB,eAAeA,gBAAgB;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}