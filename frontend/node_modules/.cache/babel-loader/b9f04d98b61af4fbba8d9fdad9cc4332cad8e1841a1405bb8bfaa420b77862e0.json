{"ast":null,"code":"import axios from 'axios';\n\n// Adjust if using Docker or a cloud service:\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\nconst handleError = error => {\n  var _error$response;\n  console.error('API Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  throw error; // Rethrow for the caller to handle\n};\nexport const registerUser = async (username, email, password) => {\n  try {\n    const {\n      data\n    } = await axios.post(`${API_BASE_URL}/register`, {\n      username,\n      email,\n      password\n    });\n    return data;\n  } catch (error) {\n    handleError(error);\n  }\n};\nexport const loginUser = async (email, password) => {\n  try {\n    const {\n      data\n    } = await axios.post(`${API_BASE_URL}/login`, {\n      email,\n      password\n    });\n    return data;\n  } catch (error) {\n    handleError(error);\n  }\n};\nexport const getAllRestaurants = async (cuisine = '') => {\n  try {\n    const {\n      data\n    } = await axios.get(`${API_BASE_URL}/restaurants?cuisine=${cuisine}`);\n    return data;\n  } catch (error) {\n    var _error$response2;\n    console.error('Error in getAllRestaurants:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n    return []; // Return an empty array to prevent crashes\n  }\n};\nexport const getRestaurant = async id => {\n  try {\n    const {\n      data\n    } = await axios.get(`${API_BASE_URL}/restaurants/${id}`);\n    return data;\n  } catch (error) {\n    handleError(error);\n  }\n};\nexport const createReservation = async (token, reservation) => {\n  try {\n    if (!token) throw new Error('Authorization token is required');\n    const {\n      data\n    } = await axios.post(`${API_BASE_URL}/reservations`, reservation, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return data;\n  } catch (error) {\n    handleError(error);\n  }\n};\nexport const getMyReservations = async token => {\n  try {\n    if (!token) throw new Error('Authorization token is required');\n    const {\n      data\n    } = await axios.get(`${API_BASE_URL}/reservations/mine`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return data;\n  } catch (error) {\n    handleError(error);\n  }\n};\nexport const createReview = async (token, review) => {\n  try {\n    if (!token) throw new Error('Authorization token is required');\n    const {\n      data\n    } = await axios.post(`${API_BASE_URL}/reviews`, review, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return data;\n  } catch (error) {\n    handleError(error);\n  }\n};\nexport const getReviewsByRestaurant = async restaurantId => {\n  try {\n    const {\n      data\n    } = await axios.get(`${API_BASE_URL}/reviews/${restaurantId}`);\n    return data;\n  } catch (error) {\n    handleError(error);\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","handleError","error","_error$response","console","response","data","message","registerUser","username","email","password","post","loginUser","getAllRestaurants","cuisine","get","_error$response2","getRestaurant","id","createReservation","token","reservation","Error","headers","Authorization","getMyReservations","createReview","review","getReviewsByRestaurant","restaurantId"],"sources":["/Users/krishchaudhary/Documents/foodie-finder/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Adjust if using Docker or a cloud service:\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\nconst handleError = (error) => {\n  console.error('API Error:', error.response?.data || error.message);\n  throw error; // Rethrow for the caller to handle\n};\n\nexport const registerUser = async (username, email, password) => {\n  try {\n    const { data } = await axios.post(`${API_BASE_URL}/register`, { username, email, password });\n    return data;\n  } catch (error) {\n    handleError(error);\n  }\n};\n\nexport const loginUser = async (email, password) => {\n  try {\n    const { data } = await axios.post(`${API_BASE_URL}/login`, { email, password });\n    return data;\n  } catch (error) {\n    handleError(error);\n  }\n};\n\nexport const getAllRestaurants = async (cuisine = '') => {\n  try {\n    const { data } = await axios.get(`${API_BASE_URL}/restaurants?cuisine=${cuisine}`);\n    return data;\n  } catch (error) {\n    console.error('Error in getAllRestaurants:', error.response?.data || error.message);\n    return []; // Return an empty array to prevent crashes\n  }\n};\n\n\nexport const getRestaurant = async (id) => {\n  try {\n    const { data } = await axios.get(`${API_BASE_URL}/restaurants/${id}`);\n    return data;\n  } catch (error) {\n    handleError(error);\n  }\n};\n\nexport const createReservation = async (token, reservation) => {\n  try {\n    if (!token) throw new Error('Authorization token is required');\n    const { data } = await axios.post(`${API_BASE_URL}/reservations`, reservation, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    return data;\n  } catch (error) {\n    handleError(error);\n  }\n};\n\nexport const getMyReservations = async (token) => {\n  try {\n    if (!token) throw new Error('Authorization token is required');\n    const { data } = await axios.get(`${API_BASE_URL}/reservations/mine`, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    return data;\n  } catch (error) {\n    handleError(error);\n  }\n};\n\nexport const createReview = async (token, review) => {\n  try {\n    if (!token) throw new Error('Authorization token is required');\n    const { data } = await axios.post(`${API_BASE_URL}/reviews`, review, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    return data;\n  } catch (error) {\n    handleError(error);\n  }\n};\n\nexport const getReviewsByRestaurant = async (restaurantId) => {\n  try {\n    const { data } = await axios.get(`${API_BASE_URL}/reviews/${restaurantId}`);\n    return data;\n  } catch (error) {\n    handleError(error);\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}